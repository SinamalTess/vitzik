{"version":3,"file":"static/js/655.ebe3883e.chunk.js","mappings":"yBAEA,IAGIA,EADAC,EAAc,EAIlBC,KAAKC,UAAY,SAACC,GACd,MAAmDA,EAAQC,KAAnDC,EAAR,EAAQA,KAAR,IAAcC,QAAAA,OAAd,MAAwB,EAAxB,MAA2BC,gBAAAA,OAA3B,MAA6C,EAA7C,EAEa,UAATF,EACAG,EAAWF,EAASC,GACJ,gBAATF,GACPI,cAAcV,GACdW,YAAY,CACRL,KAAAA,EACAM,KAAML,IAEVN,EAAcM,GACE,SAATD,GACPO,IACAF,YAAY,CACRL,KAAAA,EACAM,KAAM,KAEM,UAATN,GACPI,cAAcV,GACdW,YAAY,CACRL,KAAAA,EACAM,KAAMX,KAEM,YAATK,IACPI,cAAcV,GACdS,EAAWF,EAASC,GAE3B,EAED,IAAMK,EAAY,WACdH,cAAcV,GACdC,EAAc,CACjB,EAEKQ,EAAa,SAACF,EAAiBC,GACjCR,EAAQc,aAAY,WAAO,IAAD,EACtBH,YAAY,CACRC,KAAI,UAAEX,SAAF,QAAiBM,EACrBD,KAAM,UAGVL,GA/CS,GA+C8BO,CAC1C,GAhDY,GAiDhB,C","sources":["workers/intervalWorker.ts"],"sourcesContent":["import { IntervalWorkerMessage } from '../types/IntervalWorkerCode'\r\n\r\nconst FPS = 20\r\nconst interval = 1000 / FPS\r\nlet timeElapsed = 0\r\nlet timer: number | NodeJS.Timeout | undefined\r\n\r\n// eslint-disable-next-line no-restricted-globals\r\nself.onmessage = (message) => {\r\n    const { code, startAt = 0, midiSpeedFactor = 1 } = message.data as IntervalWorkerMessage\r\n\r\n    if (code === 'start') {\r\n        startTimer(startAt, midiSpeedFactor)\r\n    } else if (code === 'updateTimer') {\r\n        clearInterval(timer)\r\n        postMessage({\r\n            code,\r\n            time: startAt,\r\n        })\r\n        timeElapsed = startAt\r\n    } else if (code === 'stop') {\r\n        stopTimer()\r\n        postMessage({\r\n            code,\r\n            time: 0,\r\n        })\r\n    } else if (code === 'pause') {\r\n        clearInterval(timer)\r\n        postMessage({\r\n            code,\r\n            time: timeElapsed,\r\n        })\r\n    } else if (code === 'restart') {\r\n        clearInterval(timer)\r\n        startTimer(startAt, midiSpeedFactor)\r\n    }\r\n}\r\n\r\nconst stopTimer = () => {\r\n    clearInterval(timer)\r\n    timeElapsed = 0\r\n}\r\n\r\nconst startTimer = (startAt: number, midiSpeedFactor: number) => {\r\n    timer = setInterval(() => {\r\n        postMessage({\r\n            time: timeElapsed ?? startAt,\r\n            code: 'start',\r\n        })\r\n\r\n        timeElapsed = timeElapsed + interval / midiSpeedFactor\r\n    }, interval)\r\n}\r\n"],"names":["timer","timeElapsed","self","onmessage","message","data","code","startAt","midiSpeedFactor","startTimer","clearInterval","postMessage","time","stopTimer","setInterval"],"sourceRoot":""}